#include <idc/idc.idc>

static resolve_methods(func) {
	if(func == "hidepart_allinstances") return "ScrCmd_hidepartAllInstances";
	if(func == "islinked") return "ScrCmd_IsLinked";
	if(func == "startusinglessfrequentlighting") return "ScrCmd_startUsingLessFrequentLighting";
	if(func == "stopusinglessfrequentlighting") return "ScrCmd_stopUsingLessFrequentLighting";
	if(func == "enableouterspacemodellighting") return "Scr_EnableOuterSpaceModelLighting";
	if(func == "disableouterspacemodellighting") return "Scr_DisableOuterSpaceModelLighting";
	if(func == "startignoringspotlight") return "ScrCmd_startIgnoringSpotLight";
	if(func == "stopignoringspotlight") return "ScrCmd_stopIgnoringSpotLight";
	if(func == "dontcastshadows") return "ScrCmd_DontCastShadows";
	if(func == "castshadows") return "ScrCmd_CastShadows";
	if(func == "setstablemissile") return "Scr_SetStableMissile";
	if(func == "playersetgroundreferenceent") return "ScrCmd_PlayerSetGroundReferenceEnt";
	if(func == "dontinterpolate") return "ScrCmd_DontInterpolate";
	if(func == "dospawn") return "ScrCmd_dospawn";
	if(func == "stalingradspawn") return "ScrCmd_StalingradSpawn";
	if(func == "getorigin") return "ScrCmd_GetOrigin";
	if(func == "getcentroid") return "ScrCmd_GetCentroid";
	if(func == "getshootatpos") return "ScrCmd_GetShootAtPosition";
	if(func == "getdebugeye") return "ScrCmd_GetDebugEye";
	if(func == "useby") return "ScrCmd_UseBy";
	if(func == "playsound") return "ScrCmd_PlaySound";
	if(func == "playsoundasmaster") return "ScrCmd_PlaySoundAsMaster";
	if(func == "playloopsound") return "ScrCmd_PlayLoopSound";
	if(func == "eqon") return "ScrCmd_EqOn";
	if(func == "eqoff") return "ScrCmd_EqOff";
	if(func == "haseq") return "ScrCmd_HasEq";
	if(func == "iswaitingonsound") return "ScrCmd_IsWaitingOnSound";
	if(func == "getnormalhealth") return "ScrCmd_GetNormalHealth";
	if(func == "setnormalhealth") return "ScrCmd_SetNormalHealth";
	if(func == "dodamage") return "ScrCmd_DoDamage";
	if(func == "kill") return "ScrCmd_Kill";
	if(func == "show") return "ScrCmd_Show";
	if(func == "hide") return "ScrCmd_Hide";
	if(func == "showonclient") return "ScrCmd_ShowOnClient";
	if(func == "hideonclient") return "ScrCmd_HideOnClient";
	if(func == "laserforceon") return "ScrCmd_LaserForceOn";
	if(func == "laserforceoff") return "ScrCmd_LaserForceOff";
	if(func == "disconnectpaths") return "GScr_DisconnectPaths";
	if(func == "connectpaths") return "GScr_ConnectPaths";
	if(func == "startusingheroonlylighting") return "ScrCmd_startUsingHeroOnlyLighting";
	if(func == "stopusingheroonlylighting") return "ScrCmd_stopUsingHeroOnlyLighting";
	if(func == "setmode") return "GScr_SetMode";
	if(func == "getmode") return "GScr_GetMode";
	if(func == "setturretignoregoals") return "GScr_SetTurretIgnoreGoals";
	if(func == "getvalidcoverpeekouts") return "ScrCmd_GetValidCoverPeekOuts";
	if(func == "gethighestnodestance") return "ScrCmd_GetHighestNodeStance";
	if(func == "doesnodeallowstance") return "ScrCmd_DoesNodeAllowStance";
	if(func == "magicgrenade") return "ScrCmd_MagicGrenade_Actor";
	if(func == "magicgrenademanual") return "ScrCmd_MagicGrenadeManual_Actor";
	if(func == "setfriendlychain") return "GScr_SetFriendlyChain";
	if(func == "getentnum") return "GScr_GetEntnum";
	if(func == "setturretminimapvisible") return "GScr_SetTurretMinimapVisible";
	if(func == "fadeoutshellshock") return "GScr_FadeOutShellShock";
	if(func == "getplayerintelisfound") return "GScr_GetPlayerIntelIsFound";
	if(func == "setplayerintelfound") return "GScr_SetPlayerIntelFound";
	if(func == "setturretcanaidetach") return "GScr_SetTurretCanAIDetach";
	if(func == "locklightvis") return "GScr_LockLightVis";
	if(func == "unlocklightvis") return "GScr_UnlockLightVis";
	if(func == "launch") return "GScr_Launch";
	if(func == "setsoundblend") return "GScr_SetSoundBlend";
	if(func == "makefakeai") return "GScr_MakeEntityDrone";
	if(func == "spawndrone") return "GScr_SpawnDrone";
	if(func == "setcorpseremovetimer") return "GScr_SetCorpseRemoveTimer";
	if(func == "setlookattext") return "GScr_SetLookatText";
	if(func == "setspawnerteam") return "GScr_SetSpawnerTeam";
	if(func == "addaieventlistener") return "ScrCmd_AddAIEventListener";
	if(func == "removeaieventlistener") return "ScrCmd_RemoveAIEventListener";
	if(func == "getlightcolor") return "GScr_GetLightColor";
	if(func == "setlightcolor") return "GScr_SetLightColor";
	if(func == "getlightradius") return "GScr_GetLightRadius";
	if(func == "setlightradius") return "GScr_SetLightRadius";
	if(func == "getlightfovinner") return "GScr_GetLightFovInner";
	if(func == "getlightfovouter") return "GScr_GetLightFovOuter";
	if(func == "setlightfovrange") return "GScr_SetLightFovRange";
	if(func == "getlightexponent") return "GScr_GetLightExponent";
	if(func == "setlightexponent") return "GScr_SetLightExponent";
	if(func == "startragdoll") return "GScr_StartRagdoll";
	if(func == "startragdollfromimpact") return "GScr_StartRagdollFromImpact";
	if(func == "logstring") return "ScrCmd_LogString";
	if(func == "laserhidefromclient") return "ScrCmd_LaserHideFromClient";
	if(func == "stopsoundchannel") return "ScrCmd_StopSoundChannel";
	if(func == "setplayernamestring") return "HECmd_SetPlayerNameString";
	if(func == "settimerstatic") return "HECmd_SetTimerStatic";
	if(func == "settenthstimerstatic") return "HECmd_SetTenthsTimerStatic";
	if(func == "settext") return "HECmd_SetText";
	if(func == "clearalltextafterhudelem") return "HECmd_ClearAllTextAfterHudElem";
	if(func == "setshader") return "HECmd_SetMaterial";
	if(func == "settargetent") return "HECmd_SetTargetEnt";
	if(func == "cleartargetent") return "HECmd_ClearTargetEnt";
	if(func == "settimer") return "HECmd_SetTimer";
	if(func == "settimerup") return "HECmd_SetTimerUp";
	if(func == "settenthstimer") return "HECmd_SetTenthsTimer";
	if(func == "settenthstimerup") return "HECmd_SetTenthsTimerUp";
	if(func == "setclock") return "HECmd_SetClock";
	if(func == "setclockup") return "HECmd_SetClockUp";
	if(func == "setvalue") return "HECmd_SetValue";
	if(func == "setwaypoint") return "HECmd_SetWaypoint";
	if(func == "setwaypointedgestyle_rotatingicon") return "HECmd_SetWaypointEdgeStyle_RotatingIcon";
	if(func == "setwaypointedgestyle_secondaryarrow") return "HECmd_SetWaypointEdgeStyle_SecondaryArrow";
	if(func == "setwaypointiconoffscreenonly") return "HECmd_SetWaypointIconOffscreenOnly";
	if(func == "fadeovertime") return "HECmd_FadeOverTime";
	if(func == "scaleovertime") return "HECmd_ScaleOverTime";
	if(func == "moveovertime") return "HECmd_MoveOverTime";
	if(func == "reset") return "HECmd_Reset";
	if(func == "destroy") return "HECmd_Destroy";
	if(func == "setpulsefx") return "HECmd_SetPulseFX";
	if(func == "changefontscaleovertime") return "HECmd_ChangeFontScaleOverTime";
	if(func == "vehicle_teleport") return "VehCmd_Teleport";
	if(func == "vehicle_getbodyvelocity") return "VehCmd_GetBodyVelocity";
	if(func == "attachpath") return "VehCmd_AttachPath";
	if(func == "getattachpos") return "VehCmd_GetAttachPos";
	if(func == "startpath") return "VehCmd_StartPath";
	if(func == "setswitchnode") return "VehCmd_SetSwitchNode";
	if(func == "setwaitnode") return "VehCmd_SetWaitNode";
	if(func == "setwaitspeed") return "VehCmd_SetWaitSpeed";
	if(func == "vehicle_setspeed") return "VehCmd_SetSpeed";
	if(func == "vehicle_setspeedimmediate") return "VehCmd_SetSpeedImmediate";
	if(func == "vehicle_rotateyaw") return "VehCmd_RotateYaw";
	if(func == "vehicle_getspeed") return "VehCmd_GetSpeed";
	if(func == "vehicle_getvelocity") return "VehCmd_GetVelocity";
	if(func == "vehicle_getsteering") return "VehCmd_GetSteering";
	if(func == "vehicle_getthrottle") return "VehCmd_GetThrottle";
	if(func == "vehicle_turnengineoff") return "VehCmd_TurnEngineOff";
	if(func == "vehicle_turnengineon") return "VehCmd_TurnEngineOn";
	if(func == "getgoalspeedmph") return "VehCmd_GetGoalSpeedMPH";
	if(func == "setacceleration") return "VehCmd_SetAcceleration";
	if(func == "setdeceleration") return "VehCmd_SetDeceleration";
	if(func == "resumespeed") return "VehCmd_ResumeSpeed";
	if(func == "setyawspeed") return "VehCmd_SetYawSpeed";
	if(func == "setmaxpitchroll") return "VehCmd_SetMaxPitchRoll";
	if(func == "setairresistance") return "VehCmd_SetAirResitance";
	if(func == "setturningability") return "VehCmd_SetTurningAbility";
	if(func == "setjitterparams") return "VehCmd_SetJitterParams";
	if(func == "sethoverparams") return "VehCmd_SetHoverParams";
	if(func == "joltbody") return "VehCmd_JoltBody";
	if(func == "freevehicle") return "VehCmd_FreeVehicle";
	if(func == "getwheelsurface") return "VehCmd_GetWheelSurface";
	if(func == "getvehicleowner") return "VehCmd_GetVehicleOwner";
	if(func == "setvehiclelookattext") return "VehCmd_SetVehicleLookatText";
	if(func == "setvehicleteam") return "VehCmd_SetVehicleTeam";
	if(func == "setneargoalnotifydist") return "VehCmd_NearGoalNotifyDist";
	if(func == "setvehgoalpos") return "VehCmd_SetGoalPos";
	if(func == "setgoalyaw") return "VehCmd_SetGoalYaw";
	if(func == "cleargoalyaw") return "VehCmd_ClearGoalYaw";
	if(func == "settargetyaw") return "VehCmd_SetTargetYaw";
	if(func == "cleartargetyaw") return "VehCmd_ClearTargetYaw";
	if(func == "setturrettargetvec") return "VehCmd_SetTurretTargetVec";
	if(func == "setturrettargetent") return "VehCmd_SetTurretTargetEnt";
	if(func == "clearturrettarget") return "VehCmd_ClearTurretTargetEnt";
	if(func == "vehicle_canturrettargetpoint") return "VehCmd_CanTurretTargetPoint";
	if(func == "setlookatent") return "VehCmd_SetLookAtEnt";
	if(func == "clearlookatent") return "VehCmd_ClearLookAtEnt";
	if(func == "returnplayercontrol") return "VehCmd_ReturnPlayerControl";
	if(func == "setvehweapon") return "VehCmd_SetWeapon";
	if(func == "fireweapon") return "VehCmd_FireWeapon";
	if(func == "vehicleturretcontrolon") return "VehCmd_VehicleTurretControlOn";
	if(func == "vehicleturretcontroloff") return "VehCmd_VehicleTurretControlOff";
	if(func == "isturretready") return "VehCmd_IsTurretReady";
	if(func == "vehicledriveto") return "VehCmd_VehicleDriveTo";
	if(func == "vehicle_dospawn") return "VehCmd_DoSpawn";
	if(func == "vehicle_isphysveh") return "VehCmd_IsPhysVeh";
	if(func == "vehphys_starttrack") return "VehPhysCmd_StartTrack";
	if(func == "vehphys_crash") return "VehPhysCmd_Crash";
	if(func == "vehphys_launch") return "VehPhysCmd_Launch";
	if(func == "vehphys_disablecrashing") return "VehPhysCmd_DisableCrashing";
	if(func == "vehphys_enablecrashing") return "VehPhysCmd_EnableCrashing";
	if(func == "vehphys_setspeed") return "VehPhysCmd_SetSpeed";
	if(func == "vehphys_setconveyorbelt") return "VehPhysCmd_SetConveyorBelt";
	if(func == "moveto") return "ScriptEntCmd_MoveTo";
	if(func == "movex") return "ScriptEntCmd_MoveX";
	if(func == "movey") return "ScriptEntCmd_MoveY";
	if(func == "movez") return "ScriptEntCmd_MoveZ";
	if(func == "movegravity") return "ScriptEntCmd_GravityMove";
	if(func == "moveslide") return "ScriptEntCmd_MoveSlide";
	if(func == "stopmoveslide") return "ScriptEntCmd_StopMoveSlide";
	if(func == "rotateto") return "ScriptEntCmd_RotateTo";
	if(func == "rotatepitch") return "ScriptEntCmd_RotatePitch";
	if(func == "rotateyaw") return "ScriptEntCmd_RotateYaw";
	if(func == "rotateroll") return "ScriptEntCmd_RotateRoll";
	if(func == "addpitch") return "ScriptEntCmd_AddPitch";
	if(func == "addyaw") return "ScriptEntCmd_AddYaw";
	if(func == "addroll") return "ScriptEntCmd_AddRoll";
	if(func == "vibrate") return "ScriptEntCmd_Vibrate";
	if(func == "rotatevelocity") return "ScriptEntCmd_RotateVelocity";
	if(func == "solid") return "ScriptEntCmd_Solid";
	if(func == "notsolid") return "ScriptEntCmd_NotSolid";
	if(func == "setcandamage") return "ScriptEntCmd_SetCanDamage";
	if(func == "setcanradiusdamage") return "ScriptEntCmd_SetCanRadiusDamage";
	if(func == "physicslaunchclient") return "ScriptEntCmd_PhysicsLaunchClient";
	if(func == "physicslaunchserver") return "ScriptEntCmd_PhysicsLaunchServer";
	if(func == "clonebrushmodeltoscriptmodel") return "ScriptEntCmd_CloneBrushModelToScriptModel";
	if(func == "vehicleattackbuttonpressed") return "PlayerCmd_vehicleAttackButtonPressed";
	if(func == "ismantling") return "PlayerCmd_IsMantling";
	if(func == "seteqbands") return "PlayerCmd_SetEQBands";
	if(func == "getviewmodel") return "PlayerCmd_GetViewmodel";
	if(func == "fragbuttonpressed") return "PlayerCmd_fragButtonPressed";
	if(func == "secondaryoffhandbuttonpressed") return "PlayerCmd_secondaryOffhandButtonPressed";
	if(func == "getcurrentweaponclipammo") return "PlayerCmd_getCurrentWeaponClipAmmo";
	if(func == "setvelocity") return "PlayerCmd_SetVelocity";
	if(func == "getplayerviewheight") return "PlayerCmd_getViewHeight";
	if(func == "getnormalizedmovement") return "PlayerCmd_getNormalizedMovement";
	if(func == "giveweapon") return "PlayerCmd_giveWeapon";
	if(func == "takeweapon") return "PlayerCmd_takeWeapon";
	if(func == "takeallweapons") return "PlayerCmd_takeAllWeapons";
	if(func == "getcurrentweapon") return "PlayerCmd_getCurrentWeapon";
	if(func == "getcurrentprimaryweapon") return "PlayerCmd_getCurrentPrimaryWeapon";
	if(func == "getcurrentoffhand") return "PlayerCmd_getCurrentOffhand";
	if(func == "hasweapon") return "PlayerCmd_hasWeapon";
	if(func == "switchtoweapon") return "PlayerCmd_switchToWeapon";
	if(func == "switchtoweaponimmediate") return "PlayerCmd_switchToWeaponImmediate";
	if(func == "switchtooffhand") return "PlayerCmd_switchToOffhand";
	if(func == "givestartammo") return "PlayerCmd_giveStartAmmo";
	if(func == "givemaxammo") return "PlayerCmd_giveMaxAmmo";
	if(func == "getfractionstartammo") return "PlayerCmd_getFractionStartAmmo";
	if(func == "getfractionmaxammo") return "PlayerCmd_getFractionMaxAmmo";
	if(func == "isdualwielding") return "PlayerCmd_isDualWielding";
	if(func == "isreloading") return "PlayerCmd_isReloading";
	if(func == "isswitchingweapon") return "PlayerCmd_isSwitchingWeapon";
	if(func == "setorigin") return "PlayerCmd_setOrigin";
	if(func == "getvelocity") return "PlayerCmd_GetVelocity";
	if(func == "setplayerangles") return "PlayerCmd_setAngles";
	if(func == "getplayerangles") return "PlayerCmd_getAngles";
	if(func == "usebuttonpressed") return "PlayerCmd_useButtonPressed";
	if(func == "attackbuttonpressed") return "PlayerCmd_attackButtonPressed";
	if(func == "adsbuttonpressed") return "PlayerCmd_adsButtonPressed";
	if(func == "meleebuttonpressed") return "PlayerCmd_meleeButtonPressed";
	if(func == "playerads") return "PlayerCmd_playerADS";
	if(func == "isonground") return "PlayerCmd_isOnGround";
	if(func == "isusingturret") return "PlayerCmd_isUsingTurret";
	if(func == "setviewmodel") return "PlayerCmd_SetViewmodel";
	if(func == "setoffhandprimaryclass") return "PlayerCmd_setOffhandPrimaryClass";
	if(func == "getoffhandprimaryclass") return "PlayerCmd_getOffhandPrimaryClass";
	if(func == "setoffhandsecondaryclass") return "PlayerCmd_setOffhandSecondaryClass";
	if(func == "getoffhandsecondaryclass") return "PlayerCmd_getOffhandSecondaryClass";
	if(func == "beginlocationselection") return "PlayerCmd_BeginLocationSelection";
	if(func == "endlocationselection") return "PlayerCmd_EndLocationSelection";
	if(func == "disableweapons") return "PlayerCmd_DisableWeapons";
	if(func == "enableweapons") return "PlayerCmd_EnableWeapons";
	if(func == "disableoffhandweapons") return "PlayerCmd_DisableOffhandWeapons";
	if(func == "enableoffhandweapons") return "PlayerCmd_EnableOffhandWeapons";
	if(func == "disableweaponswitch") return "PlayerCmd_DisableWeaponSwitch";
	if(func == "enableweaponswitch") return "PlayerCmd_EnableWeaponSwitch";
	if(func == "openpopupmenu") return "PlayerCmd_OpenPopupMenu";
	if(func == "openpopupmenunomouse") return "PlayerCmd_OpenPopupMenuNoMouse";
	if(func == "closepopupmenu") return "PlayerCmd_ClosePopupMenu";
	if(func == "openmenu") return "PlayerCmd_OpenMenu";
	if(func == "closemenu") return "PlayerCmd_CloseMenu";
	if(func == "freezecontrols") return "PlayerCmd_FreezeControls";
	if(func == "disableusability") return "PlayerCmd_DisableUsability";
	if(func == "enableusability") return "PlayerCmd_EnableUsability";
	if(func == "setreverb") return "PlayerCmd_SetReverb";
	if(func == "deactivatereverb") return "PlayerCmd_DeactivateReverb";
	if(func == "setchannelvolumes") return "PlayerCmd_SetChannelVolumes";
	if(func == "deactivatechannelvolumes") return "PlayerCmd_DeactivateChannelVolumes";
	if(func == "playlocalsound") return "ScrCmd_PlayLocalSound";
	if(func == "stoplocalsound") return "ScrCmd_StopLocalSound";
	if(func == "setweaponammoclip") return "PlayerCmd_SetWeaponAmmoClip";
	if(func == "setweaponammostock") return "PlayerCmd_SetWeaponAmmoStock";
	if(func == "getweaponammoclip") return "PlayerCmd_GetWeaponAmmoClip";
	if(func == "getweaponammostock") return "PlayerCmd_GetWeaponAmmoStock";
	if(func == "anyammoforweaponmodes") return "PlayerCmd_AnyAmmoForWeaponModes";
	if(func == "setclientdvar") return "PlayerCmd_SetClientDvar";
	if(func == "setclientdvars") return "PlayerCmd_SetClientDvars";
	if(func == "allowads") return "PlayerCmd_AllowADS";
	if(func == "allowjump") return "PlayerCmd_AllowJump";
	if(func == "allowsprint") return "PlayerCmd_AllowSprint";
	if(func == "setspreadoverride") return "PlayerCmd_SetSpreadOverride";
	if(func == "resetspreadoverride") return "PlayerCmd_ResetSpreadOverride";
	if(func == "setactionslot") return "PlayerCmd_SetActionSlot";
	if(func == "getweaponslistall") return "PlayerCmd_GetWeaponsListAll";
	if(func == "getweaponslistprimaries") return "PlayerCmd_GetWeaponsListPrimaries";
	if(func == "getweaponslistoffhands") return "PlayerCmd_GetWeaponsListOffhands";
	if(func == "getweaponslistitems") return "PlayerCmd_GetWeaponsListItems";
	if(func == "getweaponslistexclusives") return "PlayerCmd_GetWeaponsListExclusives";
	if(func == "getweaponslist") return "PlayerCmd_GetWeaponsList";
	if(func == "canplayerplacesentry") return "PlayerCmd_CanPlayerPlaceSentry";
	if(func == "visionsetnakedforplayer") return "Scr_VisionSetNakedForPlayer";
	if(func == "visionsetnightforplayer") return "Scr_VisionSetNightForPlayer";
	if(func == "visionsetmissilecamforplayer") return "Scr_VisionSetMissileCamForPlayer";
	if(func == "visionsetthermalforplayer") return "Scr_VisionSetThermalForPlayer";
	if(func == "visionsetpainforplayer") return "Scr_VisionSetPainForPlayer";
	if(func == "setblurforplayer") return "Scr_SetBlurForPlayer";
	if(func == "getplayerweaponmodel") return "Scr_GetPlayerWeaponModel";
	if(func == "getplayerknifemodel") return "Scr_GetPlayerKnifeModel";
	if(func == "notifyonplayercommand") return "GScr_notifyOnPlayerCommand";
	if(func == "canmantle") return "PlayerCmd_CanMantle";
	if(func == "forcemantle") return "PlayerCmd_ForceMantle";
	if(func == "playfx") return "PlayerCmd_PlayFX";
	if(func == "player_recoilscaleon") return "PlayerCmd_PlayerRecoilScaleOn";
	if(func == "player_recoilscaleoff") return "PlayerCmd_PlayerRecoilScaleOff";
	if(func == "weaponlockstart") return "PlayerCmd_WeaponLockStart";
	if(func == "weaponlockfinalize") return "PlayerCmd_WeaponLockFinalize";
	if(func == "weaponlockfree") return "PlayerCmd_WeaponLockFree";
	if(func == "weaponlocktargettooclose") return "PlayerCmd_WeaponLockTargetTooClose";
	if(func == "weaponlocknoclearance") return "PlayerCmd_WeaponLockNoClearance";
	if(func == "setrearviewrenderenabled") return "PlayerCmd_SetRearViewRenderEnabled";
	if(func == "buttonpressed") return "PlayerCmd_buttonPressed";
	if(func == "showviewmodel") return "PlayerCmd_ShowViewmodel";
	if(func == "hideviewmodel") return "PlayerCmd_HideViewmodel";
	if(func == "allowstand") return "PlayerCmd_AllowStand";
	if(func == "allowcrouch") return "PlayerCmd_AllowCrouch";
	if(func == "allowprone") return "PlayerCmd_AllowProne";
	if(func == "allowlean") return "PlayerCmd_AllowLean";
	if(func == "seteq") return "PlayerCmd_SetEQ";
	if(func == "deactivateeq") return "PlayerCmd_DeactivateEq";
	if(func == "seteqlerp") return "PlayerCmd_SetEQLerp";
	if(func == "islookingat") return "ScrCmd_IsLookingAt";
	if(func == "isthrowinggrenade") return "PlayerCmd_IsThrowingGrenade";
	if(func == "isfiring") return "PlayerCmd_IsFiring";
	if(func == "ismeleeing") return "PlayerCmd_IsMeleeing";
	if(func == "setautopickup") return "ScrCmd_SetAutoPickup";
	if(func == "allowmelee") return "PlayerCmd_AllowMelee";
	if(func == "allowfire") return "PlayerCmd_AllowFire";
	if(func == "enablehealthshield") return "PlayerCmd_EnableHealthShield";
	if(func == "enabledeathshield") return "PlayerCmd_EnableDeathShield";
	if(func == "nightvisionforceoff") return "PlayerCmd_NightVisionForceOff";
	if(func == "enableinvulnerability") return "PlayerCmd_EnableInvulnerability";
	if(func == "disableinvulnerability") return "PlayerCmd_DisableInvulnerability";
	if(func == "enablebreaching") return "PlayerCmd_EnableBreaching";
	if(func == "disablebreaching") return "PlayerCmd_DisableBreaching";
	if(func == "forceviewmodelanimation") return "PlayerCmd_ForceViewmodelAnimation";
	if(func == "disableturretdismount") return "PlayerCmd_DisableTurretDismount";
	if(func == "enableturretdismount") return "PlayerCmd_EnableTurretDismount";
	if(func == "uploadscore") return "PlayerCmd_UploadScore";
	if(func == "uploadtime") return "PlayerCmd_UploadTime";
	if(func == "giveachievement") return "PlayerCmd_GiveAchievement";
	if(func == "hidehud") return "PlayerCmd_HideHud";
	if(func == "showhud") return "PlayerCmd_ShowHud";
	if(func == "mountvehicle") return "PlayerCmd_MountVehicle";
	if(func == "dismountvehicle") return "PlayerCmd_DismountVehicle";
	if(func == "animscripted") return "ScrCmd_animscripted";
	if(func == "animscriptedthirdperson") return "ScrCmd_animscriptedthirdperson";
	if(func == "animrelative") return "ScrCmd_animrelative";
	if(func == "stopanimscripted") return "ScrCmd_stopanimscripted";
	if(func == "clearanim") return "GScr_ClearAnim";
	if(func == "setanimknob") return "GScr_SetAnimKnob";
	if(func == "setanimknoblimited") return "GScr_SetAnimKnobLimited";
	if(func == "setanimknobrestart") return "GScr_SetAnimKnobRestart";
	if(func == "setanimknoblimitedrestart") return "GScr_SetAnimKnobLimitedRestart";
	if(func == "setanimknoball") return "GScr_SetAnimKnobAll";
	if(func == "setanimknoballlimited") return "GScr_SetAnimKnobAllLimited";
	if(func == "setanimknoballrestart") return "GScr_SetAnimKnobAllRestart";
	if(func == "setanimknoballlimitedrestart") return "GScr_SetAnimKnobAllLimitedRestart";
	if(func == "setanim") return "GScr_SetAnim";
	if(func == "setanimlimited") return "GScr_SetAnimLimited";
	if(func == "setanimrestart") return "GScr_SetAnimRestart";
	if(func == "setanimlimitedrestart") return "GScr_SetAnimLimitedRestart";
	if(func == "getanimtime") return "GScr_GetAnimTime";
	if(func == "getanimassettype") return "GScr_GetAnimAssetType";
	if(func == "setflaggedanimknob") return "GScr_SetFlaggedAnimKnob";
	if(func == "setflaggedanimknoblimited") return "GScr_SetFlaggedAnimKnobLimited";
	if(func == "setflaggedanimknobrestart") return "GScr_SetFlaggedAnimKnobRestart";
	if(func == "setflaggedanimknoblimitedrestart") return "GScr_SetFlaggedAnimKnobLimitedRestart";
	if(func == "setflaggedanimknoball") return "GScr_SetFlaggedAnimKnobAll";
	if(func == "setflaggedanimknoballrestart") return "GScr_SetFlaggedAnimKnobAllRestart";
	if(func == "setflaggedanim") return "GScr_SetFlaggedAnim";
	if(func == "setflaggedanimlimited") return "GScr_SetFlaggedAnimLimited";
	if(func == "setflaggedanimrestart") return "GScr_SetFlaggedAnimRestart";
	if(func == "setflaggedanimlimitedrestart") return "GScr_SetFlaggedAnimLimitedRestart";
	if(func == "useanimtree") return "GScr_UseAnimTree";
	if(func == "stopuseanimtree") return "GScr_StopUseAnimTree";
	if(func == "setanimtime") return "GScr_SetAnimTime";
	if(func == "dumpanims") return "GScr_DumpAnims";
	if(func == "getenemysqdist") return "SentientCmd_GetEnemySqDist";
	if(func == "getclosestenemysqdist") return "SentientCmd_GetClosestEnemySqDist";
	if(func == "setthreatbiasgroup") return "SentientCmd_SetThreatBiasGroup";
	if(func == "getthreatbiasgroup") return "SentientCmd_GetThreatBiasGroup";
	if(func == "makeentitysentient") return "SentientCmd_MakeEntitySentient";
	if(func == "freeentitysentient") return "SentientCmd_FreeEntitySentient";
	if(func == "isindoor") return "SentientCmd_IsInDoor";
	if(func == "getdroptofloorposition") return "SentientCmd_GetDropToFloorPosition";
	if(func == "isbadguy") return "SentientCmd_IsBadGuy";
	if(func == "startscriptedanim") return "ActorCmd_StartScriptedAnim";
	if(func == "iscovervalidagainstenemy") return "ActorCmd_IsCoverValidAgainstEnemy";
	if(func == "startcoverbehavior") return "ActorCmd_StartCoverBehavior";
	if(func == "startcoverarrival") return "ActorCmd_StartCoverArrival";
	if(func == "starttraversearrival") return "ActorCmd_StartTraverseArrival";
	if(func == "checkcoverexitposwithpath") return "ActorCmd_CheckCoverExitPosWithPath";
	if(func == "shoot") return "ActorCmd_Shoot";
	if(func == "shootblank") return "ActorCmd_ShootBlank";
	if(func == "melee") return "ActorCmd_Melee";
	if(func == "updateplayersightaccuracy") return "ActorCmd_UpdatePlayerSightAccuracy";
	if(func == "findshufflecovernode") return "ActorCmd_FindShuffleCoverNode";
	if(func == "findnearbycovernode") return "ActorCmd_FindNearbyCoverNode";
	if(func == "findcovernode") return "ActorCmd_FindCoverNode";
	if(func == "findbestcovernode") return "ActorCmd_FindBestCoverNode";
	if(func == "getcovernode") return "ActorCmd_GetCoverNode";
	if(func == "usecovernode") return "ActorCmd_UseCoverNode";
	if(func == "reacquirestep") return "ActorCmd_ReacquireStep";
	if(func == "findreacquiredirectpath") return "ActorCmd_FindReacquireDirectPath";
	if(func == "trimpathtoattack") return "ActorCmd_TrimPathToAttack";
	if(func == "reacquiremove") return "ActorCmd_ReacquireMove";
	if(func == "findreacquireproximatepath") return "ActorCmd_FindReacquireProximatePath";
	if(func == "flagenemyunattackable") return "ActorCmd_FlagEnemyUnattackable";
	if(func == "enterprone") return "ActorCmd_EnterProne";
	if(func == "exitprone") return "ActorCmd_ExitProne";
	if(func == "setproneanimnodes") return "ActorCmd_SetProneAnimNodes";
	if(func == "updateprone") return "ActorCmd_UpdateProne";
	if(func == "clearpitchorient") return "ActorCmd_ClearPitchOrient";
	if(func == "setlookatanimnodes") return "ActorCmd_SetLookAtAnimNodes";
	if(func == "setlookat") return "ActorCmd_SetLookAt";
	if(func == "setlookatentity") return "ActorCmd_SetLookAtEntity";
	if(func == "setlookatyawlimits") return "ActorCmd_SetLookAtYawLimits";
	if(func == "stoplookat") return "ActorCmd_StopLookAt";
	if(func == "getmuzzlepos") return "ActorCmd_GetMuzzlePos";
	if(func == "getmuzzleangle") return "ActorCmd_GetMuzzleAngle";
	if(func == "getmuzzlesideoffsetpos") return "ActorCmd_GetMuzzleSideOffsetPos";
	if(func == "canshoot") return "ActorCmd_CanShoot";
	if(func == "canshootenemy") return "ActorCmd_CanShootEnemy";
	if(func == "cansee") return "ActorCmd_CanSee";
	if(func == "seerecently") return "ActorCmd_SeeRecently";
	if(func == "lastknowntime") return "ActorCmd_LastKnownTime";
	if(func == "lastknownpos") return "ActorCmd_LastKnownPos";
	if(func == "dropweapon") return "ActorCmd_DropWeapon";
	if(func == "maymovetopoint") return "ActorCmd_MayMoveToPoint";
	if(func == "maymovefrompointtopoint") return "ActorCmd_MayMoveFromPointToPoint";
	if(func == "teleport") return "ActorCmd_Teleport";
	if(func == "forceteleport") return "ActorCmd_ForceTeleport";
	if(func == "safeteleport") return "ActorCmd_SafeTeleport";
	if(func == "withinapproxpathdist") return "ActorCmd_WithinApproxPathDist";
	if(func == "ispathdirect") return "ActorCmd_IsPathDirect";
	if(func == "allowedstances") return "ActorCmd_AllowedStances";
	if(func == "isstanceallowed") return "ActorCmd_IsStanceAllowed";
	if(func == "issuppressionwaiting") return "ActorCmd_IsSuppressionWaiting";
	if(func == "issuppressed") return "ActorCmd_IsSuppressed";
	if(func == "ismovesuppressed") return "ActorCmd_IsMoveSuppressed";
	if(func == "isgrenadepossafe") return "ActorCmd_IsGrenadePosSafe";
	if(func == "checkgrenadethrow") return "ActorCmd_CheckGrenadeThrow";
	if(func == "checkgrenadelaunch") return "ActorCmd_CheckGrenadeLaunch";
	if(func == "checkgrenadelaunchpos") return "ActorCmd_CheckGrenadeLaunchPos";
	if(func == "firegrenadelauncher") return "ActorCmd_FireGrenadeLauncher";
	if(func == "throwgrenade") return "ActorCmd_ThrowGrenade";
	if(func == "pickupgrenade") return "ActorCmd_PickUpGrenade";
	if(func == "useturret") return "ActorCmd_UseTurret";
	if(func == "stopuseturret") return "ActorCmd_StopUseTurret";
	if(func == "canuseturret") return "ActorCmd_CanUseTurret";
	if(func == "traversemode") return "ActorCmd_TraverseMode";
	if(func == "animmode") return "ActorCmd_AnimMode";
	if(func == "orientmode") return "ActorCmd_OrientMode";
	if(func == "getmotionangle") return "ActorCmd_GetMotionAngle";
	if(func == "shouldfacemotion") return "ActorCmd_ShouldFaceMotion";
	if(func == "getanglestolikelyenemypath") return "ActorCmd_GetAnglesToLikelyEnemyPath";
	if(func == "setturretanim") return "ActorCmd_SetTurretAnim";
	if(func == "getturret") return "ActorCmd_GetTurret";
	if(func == "getgroundenttype") return "ActorCmd_GetGroundEntType";
	if(func == "animcustom") return "ScrCmd_AnimCustom";
	if(func == "isinscriptedstate") return "ScrCmd_IsInScriptedState";
	if(func == "canattackenemynode") return "ScrCmd_CanAttackEnemyNode";
	if(func == "getnegotiationstartnode") return "ScrCmd_GetNegotiationStartNode";
	if(func == "getnegotiationendnode") return "ScrCmd_GetNegotiationEndNode";
	if(func == "getdoorpathnode") return "ScrCmd_GetDoorPathNode";
	if(func == "comparenodedirtopathdir") return "ScrCmd_CompareNodeDirToPathDir";
	if(func == "checkprone") return "ActorCmd_CheckProne";
	if(func == "pushplayer") return "ActorCmd_PushPlayer";
	if(func == "checkgrenadethrowpos") return "ActorCmd_CheckGrenadeThrowPos";
	if(func == "setgoalnode") return "ActorCmd_SetGoalNode";
	if(func == "setgoalpos") return "ActorCmd_SetGoalPos";
	if(func == "setgoalentity") return "ActorCmd_SetGoalEntity";
	if(func == "setgoalvolume") return "ActorCmd_SetGoalVolume";
	if(func == "setgoalvolumeauto") return "ActorCmd_SetGoalVolumeAuto";
	if(func == "getgoalvolume") return "ActorCmd_GetGoalVolume";
	if(func == "cleargoalvolume") return "ActorCmd_ClearGoalVolume";
	if(func == "setfixednodesafevolume") return "ActorCmd_SetFixedNodeSafeVolume";
	if(func == "getfixednodesafevolume") return "ActorCmd_GetFixedNodeSafeVolume";
	if(func == "clearfixednodesafevolume") return "ActorCmd_ClearFixedNodeSafeVolume";
	if(func == "isingoal") return "ActorCmd_IsInGoal";
	if(func == "setruntopos") return "ActorCmd_SetOverrideRunToPos";
	if(func == "nearnode") return "ActorCmd_NearNode";
	if(func == "nearclaimnode") return "ActorCmd_NearClaimNode";
	if(func == "nearclaimnodeandangle") return "ActorCmd_NearClaimNodeAndAngle";
	if(func == "atdangerousnode") return "ActorCmd_AtDangerousNode";
	if(func == "getenemyinfo") return "ActorCmd_GetEnemyInfo";
	if(func == "clearenemy") return "ActorCmd_ClearEnemy";
	if(func == "setentitytarget") return "ActorCmd_SetEntityTarget";
	if(func == "clearentitytarget") return "ActorCmd_ClearEntityTarget";
	if(func == "setpotentialthreat") return "ActorCmd_SetPotentialThreat";
	if(func == "clearpotentialthreat") return "ActorCmd_ClearPotentialThreat";
	if(func == "setflashbanged") return "ActorCmd_SetFlashBanged";
	if(func == "setengagementmindist") return "ActorCmd_SetEngagementMinDist";
	if(func == "setengagementmaxdist") return "ActorCmd_SetEngagementMaxDist";
	if(func == "isknownenemyinradius") return "ActorCmd_IsKnownEnemyInRadius";
	if(func == "isknownenemyinvolume") return "ActorCmd_IsKnownEnemyInVolume";
	if(func == "settalktospecies") return "ActorCmd_SetTalkToSpecies";
	if(func == "thermaldrawenable") return "ActorCmd_ThermalDrawEnable";
	if(func == "thermaldrawdisable") return "ActorCmd_ThermalDrawDisable";
	if(func == "invisiblenotsolid") return "ActorCmd_InvisibleNotSolid";
	if(func == "visiblesolid") return "ActorCmd_VisibleSolid";
	if(func == "setdefaultaimlimits") return "ActorCmd_SetDefaultAimLimits";
	if(func == "attach") return "ScrCmd_attach";
	if(func == "attachshieldmodel") return "ScrCmd_attachShieldModel";
	if(func == "detach") return "ScrCmd_detach";
	if(func == "detachshieldmodel") return "ScrCmd_detachShieldModel";
	if(func == "moveshieldmodel") return "ScrCmd_moveShieldModel";
	if(func == "detachall") return "ScrCmd_detachAll";
	if(func == "getattachsize") return "ScrCmd_GetAttachSize";
	if(func == "getattachmodelname") return "ScrCmd_GetAttachModelName";
	if(func == "getattachtagname") return "ScrCmd_GetAttachTagName";
	if(func == "getattachignorecollision") return "ScrCmd_GetAttachIgnoreCollision";
	if(func == "hidepart") return "ScrCmd_hidepart";
	if(func == "hideallparts") return "ScrCmd_hideallparts";
	if(func == "showpart") return "ScrCmd_showpart";
	if(func == "showallparts") return "ScrCmd_showallparts";
	if(func == "linkto") return "ScrCmd_LinkTo";
	if(func == "linktoblendtotag") return "ScrCmd_LinkToBlendToTag";
	if(func == "unlink") return "ScrCmd_Unlink";
	if(func == "enablelinkto") return "ScrCmd_EnableLinkTo";
	if(func == "playerlinkto") return "ScrCmd_PlayerLinkTo";
	if(func == "playerlinktodelta") return "ScrCmd_PlayerLinkToDelta";
	if(func == "playerlinkweaponviewtodelta") return "ScrCmd_PlayerLinkWeaponViewToDelta";
	if(func == "playerlinktoabsolute") return "ScrCmd_PlayerLinkToAbsolute";
	if(func == "playerlinktoblend") return "ScrCmd_PlayerLinkToBlend";
	if(func == "playerlinkedoffsetenable") return "ScrCmd_PlayerLinkedOffsetEnable";
	if(func == "playerlinkedoffsetdisable") return "ScrCmd_PlayerLinkedOffsetDisable";
	if(func == "playersetstreamorigin") return "ScrCmd_PlayerSetStreamOrigin";
	if(func == "playerclearstreamorigin") return "ScrCmd_PlayerClearStreamOrigin";
	if(func == "lerpviewangleclamp") return "ScrCmd_LerpViewAngleClamp";
	if(func == "geteye") return "ScrCmd_GetEye";
	if(func == "istouching") return "ScrCmd_IsTouching";
	if(func == "stoploopsound") return "ScrCmd_StopLoopSound";
	if(func == "stopsounds") return "ScrCmd_StopSounds";
	if(func == "playrumbleonentity") return "ScrCmd_PlayRumbleOnEntity";
	if(func == "playrumblelooponentity") return "ScrCmd_PlayRumbleLoopOnEntity";
	if(func == "stoprumble") return "ScrCmd_StopRumble";
	if(func == "delete") return "ScrCmd_Delete";
	if(func == "setmodel") return "ScrCmd_SetModel";
	if(func == "laseron") return "ScrCmd_LaserOn";
	if(func == "laseroff") return "ScrCmd_LaserOff";
	if(func == "laseraltviewon") return "ScrCmd_LaserAltViewOn";
	if(func == "laseraltviewoff") return "ScrCmd_LaserAltViewOff";
	if(func == "thermalvisionon") return "ScrCmd_ThermalVisionOn";
	if(func == "thermalvisionoff") return "ScrCmd_ThermalVisionOff";
	if(func == "thermalvisionfofoverlayon") return "ScrCmd_ThermalVisionFOFOverlayOn";
	if(func == "thermalvisionfofoverlayoff") return "ScrCmd_ThermalVisionFOFOverlayOff";
	if(func == "painvisionon") return "ScrCmd_PainVisionOn";
	if(func == "painvisionoff") return "ScrCmd_PainVisionOff";
	if(func == "setcontents") return "ScrCmd_SetContents";
	if(func == "makeusable") return "ScrCmd_MakeUsable";
	if(func == "makeunusable") return "ScrCmd_MakeUnusable";
	if(func == "setcursorhint") return "GScr_SetCursorHint";
	if(func == "sethintstring") return "GScr_SetHintString";
	if(func == "forceusehinton") return "ScrCmd_ForceUseHintOn";
	if(func == "forceusehintoff") return "ScrCmd_ForceUseHintOff";
	if(func == "makesoft") return "ScrCmd_MakeSoft";
	if(func == "makehard") return "ScrCmd_MakeHard";
	if(func == "willneverchange") return "ScrCmd_EntityWillNeverChange";
	if(func == "startfiring") return "GScr_StartFiring";
	if(func == "stopfiring") return "GScr_StopFiring";
	if(func == "isfiringturret") return "GScr_IsFiringTurret";
	if(func == "startbarrelspin") return "GScr_StartBarrelSpin";
	if(func == "stopbarrelspin") return "GScr_StopBarrelSpin";
	if(func == "getbarrelspinrate") return "GScr_GetBarrelSpinRate";
	if(func == "shootturret") return "GScr_ShootTurret";
	if(func == "getturretowner") return "GScr_GetTurretOwner";
	if(func == "setsentryowner") return "GScr_SetSentryOwner";
	if(func == "setsentrycarried") return "GScr_SetSentryCarried";
	if(func == "settargetentity") return "GScr_SetTargetEntity";
	if(func == "cleartargetentity") return "GScr_ClearTargetEntity";
	if(func == "getturrettarget") return "GScr_GetTurretTarget";
	if(func == "setplayerspread") return "GScr_SetPlayerSpread";
	if(func == "setaispread") return "GScr_SetAiSpread";
	if(func == "setsuppressiontime") return "GScr_SetSuppressionTime";
	if(func == "setconvergencetime") return "GScr_SetConvergenceTime";
	if(func == "setturretteam") return "GScr_SetTurretTeam";
	if(func == "maketurretsolid") return "GScr_MakeTurretSolid";
	if(func == "maketurretoperable") return "GScr_MakeTurretOperable";
	if(func == "maketurretinoperable") return "GScr_MakeTurretInoperable";
	if(func == "setturretaccuracy") return "GScr_SetTurretAccuracy";
	if(func == "setrightarc") return "GScr_SetRightArc";
	if(func == "setleftarc") return "GScr_SetLeftArc";
	if(func == "settoparc") return "GScr_SetTopArc";
	if(func == "setbottomarc") return "GScr_SetBottomArc";
	if(func == "setautorotationdelay") return "GScr_SetAutoRotationDelay";
	if(func == "setdefaultdroppitch") return "GScr_SetDefaultDropPitch";
	if(func == "restoredefaultdroppitch") return "GScr_RestoreDefaultDropPitch";
	if(func == "turretfiredisable") return "GScr_TurretFireDisable";
	if(func == "turretfireenable") return "GScr_TurretFireEnable";
	if(func == "setturretmodechangewait") return "GScr_SetTurretModeChangeWait";
	if(func == "usetriggerrequirelookat") return "GScr_UseTriggerRequireLookAt";
	if(func == "getstance") return "ScrCmd_GetStance";
	if(func == "setstance") return "ScrCmd_SetStance";
	if(func == "itemweaponsetammo") return "ScrCmd_ItemWeaponSetAmmo";
	if(func == "getammocount") return "GScr_GetAmmoCount";
	if(func == "gettagorigin") return "GScr_GetTagOrigin";
	if(func == "gettagangles") return "GScr_GetTagAngles";
	if(func == "shellshock") return "GScr_ShellShock";
	if(func == "stunplayer") return "GScr_StunPlayer";
	if(func == "stopshellshock") return "GScr_StopShellShock";
	if(func == "setdepthoffield") return "GScr_SetDepthOfField";
	if(func == "setviewmodeldepthoffield") return "GScr_SetViewModelDepthOfField";
	if(func == "setmotionblurmovescale") return "GScr_SetMotionBlurMoveScale";
	if(func == "setmotionblurturnscale") return "GScr_SetMotionBlurTurnScale";
	if(func == "setmotionblurzoomscale") return "GScr_SetMotionBlurZoomScale";
	if(func == "viewkick") return "GScr_ViewKick";
	if(func == "localtoworldcoords") return "GScr_LocalToWorldCoords";
	if(func == "getentitynumber") return "GScr_GetEntityNumber";
	if(func == "enablegrenadetouchdamage") return "GScr_EnableGrenadeTouchDamage";
	if(func == "disablegrenadetouchdamage") return "GScr_DisableGrenadeTouchDamage";
	if(func == "enableaimassist") return "GScr_EnableAimAssist";
	if(func == "disableaimassist") return "GScr_DisableAimAssist";
	if(func == "radiusdamage") return "GScr_EntityRadiusDamage";
	if(func == "detonate") return "GScr_Detonate";
	if(func == "damageconetrace") return "GScr_DamageConeTrace";
	if(func == "sightconetrace") return "GScr_SightConeTrace";
	if(func == "missile_settargetent") return "GScr_MissileSetTargetEnt";
	if(func == "missile_settargetpos") return "GScr_MissileSetTargetPos";
	if(func == "missile_cleartarget") return "GScr_MissileClearTarget";
	if(func == "missile_setflightmodedirect") return "GScr_MissileSetFlightmodeDirect";
	if(func == "missile_setflightmodetop") return "GScr_MissileSetFlightmodeTop";
	if(func == "getlightintensity") return "GScr_GetLightIntensity";
	if(func == "setlightintensity") return "GScr_SetLightIntensity";
	if(func == "isragdoll") return "GScr_IsRagdoll";
	if(func == "setmovespeedscale") return "ScrCmd_SetMoveSpeedScale";
	if(func == "cameralinkto") return "GScr_CameraLinkTo";
	if(func == "cameraunlink") return "GScr_CameraUnlink";
	if(func == "controlslinkto") return "GScr_ControlsLinkTo";
	if(func == "controlsunlink") return "GScr_ControlsUnlink";
	if(func == "getplayersetting") return "GScr_GetPlayerSetting";
	if(func == "getlocalplayerprofiledata") return "GScr_GetLocalPlayerProfileData";
	if(func == "setlocalplayerprofiledata") return "GScr_SetLocalPlayerProfileData";
	if(func == "remotecamerasoundscapeon") return "GScr_RemoteCameraSoundscapeOn";
	if(func == "remotecamerasoundscapeoff") return "GScr_RemoteCameraSoundscapeOff";
	if(func == "radarjamon") return "ScrCmd_RadarJamOn";
	if(func == "radarjamoff") return "ScrCmd_RadarJamOff";
	if(func == "setmotiontrackervisible") return "ScrCmd_SetMotionTrackerVisible";
	if(func == "getmotiontrackervisible") return "ScrCmd_GetMotionTrackerVisible";
	if(func == "worldpointinreticle_circle") return "ScrCmd_WorldPointInReticle_Circle";
	if(func == "getpointinbounds") return "ScrCmd_GetPointInBounds";
	if(func == "transfermarkstonewscriptmodel") return "ScrCmd_TransferMarksToNewScriptModel";
	if(func == "alternatescenecameralinkto") return "GScr_AlternateSceneCameraLinkTo";
	if(func == "alternatescenecameraunlink") return "GScr_AlternateSceneCameraUnlink";
	if(func == "setwatersheeting") return "GScrCmd_SetWaterSheeting";
	if(func == "setweaponhudiconoverride") return "GScrCmd_SetWeaponHudIconOverride";
	if(func == "getweaponhudiconoverride") return "GScrCmd_GetWeaponHudIconOverride";
	if(func == "setempjammed") return "GScr_SetEMPJammed";
	return sprintf("BuiltinMethod_%s", func);
}

static resolve_functions(func) {
	if(func == "iprintln") return "iprintln";
	if(func == "iprintlnbold") return "iprintlnbold";
	if(func == "getent") return "Scr_GetEnt";
	if(func == "getentarray") return "Scr_GetEntArray";
	if(func == "getnode") return "Scr_GetNode";
	if(func == "getnodearray") return "Scr_GetNodeArray";
	if(func == "getallnodes") return "Scr_GetAllNodes";
	if(func == "getnodesinradius") return "Scr_GetNodesInRadius";
	if(func == "getnodesinradiussorted") return "Scr_GetNodesInRadiusSorted";
	if(func == "getreflectionlocs") return "Scr_GetReflectionLocs";
	if(func == "logstring") return "Scr_LogString";
	if(func == "getvehicletracksegment") return "GScr_GetVehicleTrackSegment";
	if(func == "getvehicletracksegmentarray") return "GScr_GetVehicleTrackSegmentArray";
	if(func == "getallvehicletracksegments") return "GScr_GetAllVehicleTrackSegments";
	if(func == "spawnstruct") return "Scr_AddStruct";
	if(func == "isarray") return "GScr_IsArray";
	if(func == "isalive") return "GScr_IsAlive";
	if(func == "isspawner") return "GScr_IsSpawner";
	if(func == "isplayer") return "GScr_IsPlayer";
	if(func == "isai") return "GScr_IsAI";
	if(func == "issentient") return "GScr_IsSentient";
	if(func == "isgodmode") return "GScr_IsGodMode";
	if(func == "getdebugdvar") return "GScr_GetDebugDvar";
	if(func == "getdebugdvarint") return "GScr_GetDebugDvarInt";
	if(func == "getdebugdvarfloat") return "GScr_GetDebugDvarFloat";
	if(func == "setsaveddvar") return "GScr_SetSavedDvar";
	if(func == "getfreeaicount") return "Scr_GetFreeAICount";
	if(func == "getaicount") return "Scr_GetAICount";
	if(func == "getaiarray") return "Scr_GetAIArray";
	if(func == "getaispeciesarray") return "Scr_GetAISpeciesArray";
	if(func == "getspawnerarray") return "Scr_GetSpawnerArray";
	if(func == "getcorpsearray") return "Scr_GetCorpseArray";
	if(func == "getspawnerteamarray") return "Scr_GetSpawnerTeamArray";
	if(func == "getweaponclipmodel") return "Scr_GetWeaponClipModel";
	if(func == "getbrushmodelcenter") return "GScr_GetBrushModelCenter";
	if(func == "getkeybinding") return "GScr_GetKeyBinding";
	if(func == "getcommandfromkey") return "GScr_GetCommandFromKey";
	if(func == "weaponfightdist") return "GScr_WeaponFightDist";
	if(func == "weaponmaxdist") return "GScr_WeaponMaxDist";
	if(func == "isturretactive") return "GScr_IsTurretActive";
	if(func == "target_set") return "Scr_Target_Set";
	if(func == "target_remove") return "Scr_Target_Remove";
	if(func == "target_setshader") return "Scr_Target_SetShader";
	if(func == "target_setoffscreenshader") return "Scr_Target_SetOffscreenShader";
	if(func == "target_isinrect") return "Scr_Target_IsInRect";
	if(func == "target_isincircle") return "Scr_Target_IsInCircle";
	if(func == "target_startreticlelockon") return "Scr_Target_StartLockOn";
	if(func == "target_clearreticlelockon") return "Scr_Target_ClearLockOn";
	if(func == "target_getarray") return "Scr_Target_GetArray";
	if(func == "target_istarget") return "Scr_Target_IsTarget";
	if(func == "target_setattackmode") return "Scr_Target_SetAttackMode";
	if(func == "target_setjavelinonly") return "Scr_Target_SetJavelinOnly";
	if(func == "target_hidefromplayer") return "Scr_Target_HideFromPlayer";
	if(func == "target_showtoplayer") return "Scr_Target_ShowToPlayer";
	if(func == "missile_createattractorent") return "Scr_MissileCreateAttractorEnt";
	if(func == "missile_createattractororigin") return "Scr_MissileCreateAttractorOrigin";
	if(func == "missile_createrepulsorent") return "Scr_MissileCreateRepulsorEnt";
	if(func == "missile_createrepulsororigin") return "Scr_MissileCreateRepulsorOrigin";
	if(func == "missile_deleteattractor") return "Scr_MissileDeleteAttractor";
	if(func == "getstartorigin") return "GScr_GetStartOrigin";
	if(func == "getstartangles") return "GScr_GetStartAngles";
	if(func == "getcycleoriginoffset") return "GScr_GetCycleOriginOffset";
	if(func == "magicgrenade") return "ScrCmd_MagicGrenade";
	if(func == "magicgrenademanual") return "ScrCmd_MagicGrenadeManual";
	if(func == "setblur") return "Scr_SetBlur";
	if(func == "musicplay") return "Scr_MusicPlay";
	if(func == "musicstop") return "Scr_MusicStop";
	if(func == "soundfade") return "Scr_SoundFade";
	if(func == "amplify") return "Scr_Amplify";
	if(func == "amplifystop") return "Scr_AmplifyStop";
	if(func == "soundsettimescalefactor") return "Scr_SoundSetTimeScaleFactor";
	if(func == "soundresettimescale") return "Scr_SoundResetTimeScale";
	if(func == "precachenightvisioncodeassets") return "Scr_PrecacheNightvisionCodeAssets";
	if(func == "savegame") return "Scr_SaveGame";
	if(func == "issavesuccessful") return "Scr_IsSaveSuccessful";
	if(func == "issaverecentlyloaded") return "Scr_IsRecentlyLoaded";
	if(func == "savegamenocommit") return "Scr_SaveGameNoCommit";
	if(func == "commitsave") return "Scr_CommitSave";
	if(func == "commitwouldbevalid") return "Scr_CommitWouldBeValid";
	if(func == "getfxvisibility") return "Scr_GetFXVis";
	if(func == "setculldist") return "Scr_SetCullDist";
	if(func == "getculldist") return "Scr_GetCullDist";
	if(func == "sethalfresparticles") return "Scr_SetHalfResParticles";
	if(func == "visionsetnaked") return "Scr_VisionSetNaked";
	if(func == "visionsetnight") return "Scr_VisionSetNight";
	if(func == "visionsetmissilecam") return "Scr_VisionSetMissilecam";
	if(func == "visionsetthermal") return "Scr_VisionSetThermal";
	if(func == "visionsetpain") return "Scr_VisionSetPain";
	if(func == "getmapsunlight") return "Scr_GetMapSunLight";
	if(func == "setsunlight") return "Scr_SetSunLight";
	if(func == "resetsunlight") return "Scr_ResetSunLight";
	if(func == "getmapsundirection") return "Scr_GetMapSunDirection";
	if(func == "setsundirection") return "Scr_SetSunDirection";
	if(func == "lerpsundirection") return "Scr_LerpSunDirection";
	if(func == "resetsundirection") return "Scr_ResetSunDirection";
	if(func == "enableforcedsunshadows") return "Scr_EnableForcedSunShadows";
	if(func == "enableforcednosunshadows") return "Scr_EnableForcedNoSunShadows";
	if(func == "disableforcedsunshadows") return "Scr_DisableForcedSunShadows";
	if(func == "changelevel") return "GScr_ChangeLevel";
	if(func == "missionsuccess") return "GScr_MissionSuccess";
	if(func == "missionfailed") return "GScr_MissionFailed";
	if(func == "setmissiondvar") return "GScr_SetMissionDvar";
	if(func == "cinematic") return "GScr_Cinematic";
	if(func == "cinematicingame") return "GScr_CinematicInGame";
	if(func == "cinematicingamesync") return "GScr_CinematicInGameSync";
	if(func == "cinematicingameloop") return "GScr_CinematicInGameLoop";
	if(func == "cinematicingameloopresident") return "GScr_CinematicInGameLoopResident";
	if(func == "iscinematicplaying") return "GScr_IsCinematicPlaying";
	if(func == "stopcinematicingame") return "GScr_StopCinematicInGame";
	if(func == "drawcompassfriendlies") return "GScr_DrawCompassFriendlies";
	if(func == "bulletspread") return "Scr_BulletSpread";
	if(func == "bullettracer") return "Scr_BulletTracer";
	if(func == "badplace_delete") return "Scr_BadPlace_Delete";
	if(func == "badplace_cylinder") return "Scr_BadPlace_Cylinder";
	if(func == "badplace_arc") return "Scr_BadPlace_Arc";
	if(func == "badplace_brush") return "Scr_BadPlace_Brush";
	if(func == "clearallcorpses") return "Scr_ClearAllCorpses";
	if(func == "newhudelem") return "GScr_NewHudElem";
	if(func == "newclienthudelem") return "GScr_NewClientHudElem";
	if(func == "resettimeout") return "Scr_ResetTimeout";
	if(func == "setturretnode") return "Scr_SetTurretNode";
	if(func == "unsetturretnode") return "Scr_UnsetTurretNode";
	if(func == "setnodepriority") return "Scr_SetNodePriority";
	if(func == "isnodeoccupied") return "Scr_IsNodeOccupied";
	if(func == "setdebugorigin") return "GScr_SetDebugOrigin";
	if(func == "setdebugangles") return "GScr_SetDebugAngles";
	if(func == "issplitscreen") return "Scr_IsSplitscreen";
	if(func == "updategamerprofile") return "ScrCmd_UpdateGamerProfile";
	if(func == "updategamerprofileall") return "ScrCmd_UpdateGamerProfileAll";
	if(func == "clearlocalizedstrings") return "GScr_ClearLocalizedStrings";
	if(func == "setphysicsgravitydir") return "ScrCmd_SetPhysicsGravityDir";
	if(func == "gettimescale") return "ScrCmd_GetTimeScale";
	if(func == "settimescale") return "ScrCmd_SetTimeScale";
	if(func == "setslowmotionview") return "ScrCmd_SetSlowMotionView";
	if(func == "refreshhudcompass") return "Scr_RefreshHudCompass";
	if(func == "refreshhudammocounter") return "Scr_RefreshHudAmmoCounter";
	if(func == "notifyoncommand") return "GScr_notifyOnCommand";
	if(func == "gettimesincelastpaused") return "Scr_GetTimeSinceLastPaused";
	//Objectives_GetFunction
	if(func == "objective_add") return "Scr_Objective_Add";
	if(func == "objective_delete") return "Scr_Objective_Delete";
	if(func == "objective_onentity") return "Scr_Objective_OnEntity";
	if(func == "objective_state") return "Scr_Objective_State";
	if(func == "objective_state_nomessage") return "Scr_Objective_State_NoMessage";
	if(func == "objective_string") return "Scr_Objective_String";
	if(func == "objective_string_nomessage") return "Scr_Objective_String_NoMessage";
	if(func == "objective_icon") return "Scr_Objective_Icon";
	if(func == "objective_position") return "Scr_Objective_Position";
	if(func == "objective_additionalposition") return "Scr_Objective_AdditionalPosition";
	if(func == "objective_current") return "Scr_Objective_Current";
	if(func == "objective_current_nomessage") return "Scr_Objective_Current_NoMessage";
	if(func == "objective_additionalcurrent") return "Scr_Objective_AdditionalCurrent";
	if(func == "objective_ring") return "Scr_Objective_Ring";
	if(func == "objective_setpointertextoverride") return "Scr_Objective_SetPointerTextOverride";
	//Sentient_GetFunction
	if(func == "createthreatbiasgroup") return "SentientCmd_CreateThreatBiasGroup";
	if(func == "threatbiasgroupexists") return "SentientCmd_ThreatBiasGroupExists";
	if(func == "getthreatbias") return "SentientCmd_GetThreatBias";
	if(func == "setthreatbias") return "SentientCmd_SetThreatBias";
	if(func == "setthreatbiasagainstall") return "SentientCmd_SetThreatBiasAgainstAll";
	if(func == "setignoremegroup") return "SentientCmd_SetIgnoreMeGroup";
	if(func == "isenemyteam") return "SentientCmd_IsEnemyTeam";
	//Common_GetFunction
	if(func == "createprintchannel") return "GScr_CreatePrintChannel";
	if(func == "setprintchannel") return "GScr_printChannelSet";
	if(func == "print") return "print";
	if(func == "println") return "println";
	if(func == "print3d") return "GScr_print3d";
	if(func == "line") return "GScr_line";
	if(func == "precacheturret") return "GScr_PrecacheTurret";
	if(func == "getweaponarray") return "Scr_GetWeaponArray";
	if(func == "spawnturret") return "GScr_SpawnTurret";
	if(func == "canspawnturret") return "GScr_CanSpawnTurret";
	if(func == "assert") return "assertCmd";
	if(func == "assertex") return "assertexCmd";
	if(func == "assertmsg") return "assertmsgCmd";
	if(func == "isdefined") return "GScr_IsDefined";
	if(func == "isstring") return "GScr_IsString";
	if(func == "setdvar") return "GScr_SetDvar";
	if(func == "setdvarifuninitialized") return "GScr_SetDvarIfUninitialized";
	if(func == "setdevdvar") return "GScr_SetDevDvar";
	if(func == "setdevdvarifuninitialized") return "GScr_SetDevDvarIfUninitialized";
	if(func == "getdvar") return "GScr_GetDvar";
	if(func == "getdvarint") return "GScr_GetDvarInt";
	if(func == "getdvarfloat") return "GScr_GetDvarFloat";
	if(func == "getdvarvector") return "GScr_GetDvarVector";
	if(func == "gettime") return "GScr_GetTime";
	if(func == "getentbynum") return "Scr_GetEntByNum";
	if(func == "getweaponmodel") return "Scr_GetWeaponModel";
	if(func == "getweaponhidetags") return "Scr_GetWeaponHideTags";
	if(func == "getanimlength") return "GScr_GetAnimLength";
	if(func == "animhasnotetrack") return "GScr_AnimHasNotetrack";
	if(func == "getnotetracktimes") return "GScr_GetNotetrackTimes";
	if(func == "spawn") return "GScr_Spawn";
	if(func == "bullettrace") return "Scr_BulletTrace";
	if(func == "bullettracepassed") return "Scr_BulletTracePassed";
	if(func == "sighttracepassed") return "Scr_SightTracePassed";
	if(func == "physicstrace") return "Scr_PhysicsTrace";
	if(func == "playerphysicstrace") return "Scr_PlayerPhysicsTrace";
	if(func == "getgroundposition") return "Scr_GetGroundPosition";
	if(func == "getmovedelta") return "GScr_GetMoveDelta";
	if(func == "getangledelta") return "GScr_GetAngleDelta";
	if(func == "getnorthyaw") return "GScr_GetNorthYaw";
	if(func == "setnorthyaw") return "GScr_SetNorthYaw";
	if(func == "setslowmotion") return "ScrCmd_SetSlowMotion";
	if(func == "randomint") return "Scr_RandomInt";
	if(func == "randomfloat") return "Scr_RandomFloat";
	if(func == "randomintrange") return "Scr_RandomIntRange";
	if(func == "randomfloatrange") return "Scr_RandomFloatRange";
	if(func == "sin") return "GScr_sin";
	if(func == "cos") return "GScr_cos";
	if(func == "tan") return "GScr_tan";
	if(func == "asin") return "GScr_asin";
	if(func == "acos") return "GScr_acos";
	if(func == "atan") return "GScr_atan";
	if(func == "int") return "GScr_CastInt";
	if(func == "abs") return "GScr_abs";
	if(func == "min") return "GScr_min";
	if(func == "max") return "GScr_max";
	if(func == "floor") return "GScr_floor";
	if(func == "ceil") return "GScr_ceil";
	if(func == "exp") return "GScr_exp";
	if(func == "log") return "GScr_log";
	if(func == "sqrt") return "GScr_sqrt";
	if(func == "squared") return "GScr_squared";
	if(func == "clamp") return "GScr_clamp";
	if(func == "angleclamp") return "GScr_AngleClamp360";
	if(func == "angleclamp180") return "GScr_AngleClamp180";
	if(func == "vectorfromlinetopoint") return "GScr_VectorFromLineToPoint";
	if(func == "pointonsegmentnearesttopoint") return "GScr_PointOnSegmentNearestToPoint";
	if(func == "distance") return "Scr_Distance";
	if(func == "distance2d") return "Scr_Distance2D";
	if(func == "distancesquared") return "Scr_DistanceSquared";
	if(func == "length") return "Scr_Length";
	if(func == "lengthsquared") return "Scr_LengthSquared";
	if(func == "closer") return "Scr_Closer";
	if(func == "vectordot") return "Scr_VectorDot";
	if(func == "vectornormalize") return "Scr_VectorNormalize";
	if(func == "vectortoangles") return "Scr_VectorToAngles";
	if(func == "vectortoyaw") return "Scr_VectorToYaw";
	if(func == "vectorlerp") return "Scr_VectorLerp";
	if(func == "anglestoup") return "Scr_AnglesToUp";
	if(func == "anglestoright") return "Scr_AnglesToRight";
	if(func == "anglestoforward") return "Scr_AnglesToForward";
	if(func == "combineangles") return "Scr_CombineAngles";
	if(func == "transformmove") return "Scr_TransformMove";
	if(func == "issubstr") return "Scr_IsSubStr";
	if(func == "getsubstr") return "Scr_GetSubStr";
	if(func == "tolower") return "Scr_ToLower";
	if(func == "strtok") return "Scr_StrTok";
	if(func == "ambientplay") return "Scr_AmbientPlay";
	if(func == "ambientstop") return "Scr_AmbientStop";
	if(func == "precachemodel") return "Scr_PrecacheModel";
	if(func == "precacheshellshock") return "Scr_PrecacheShellShock";
	if(func == "precacheitem") return "Scr_PrecacheItem";
	if(func == "precacheshader") return "Scr_PrecacheMaterial";
	if(func == "precachestring") return "Scr_PrecacheString";
	if(func == "precachemenu") return "GScr_PrecacheMenu";
	if(func == "precacherumble") return "Scr_PrecacheRumble";
	if(func == "precachelocationselector") return "GScr_PrecacheLocationSelector";
	if(func == "loadfx") return "Scr_LoadFX";
	if(func == "playfx") return "Scr_PlayFX";
	if(func == "playfxontag") return "Scr_PlayFXOnTag";
	if(func == "stopfxontag") return "Scr_StopFXOnTag";
	if(func == "playloopedfx") return "Scr_PlayLoopedFX";
	if(func == "spawnfx") return "Scr_SpawnFX";
	if(func == "triggerfx") return "Scr_TriggerFX";
	if(func == "playfxontagforclients") return "Scr_PlayFXOnTagForClients";
	if(func == "physicsexplosionsphere") return "Scr_PhysicsExplosionSphere";
	if(func == "physicsexplosioncylinder") return "Scr_PhysicsExplosionCylinder";
	if(func == "physicsjolt") return "Scr_PhysicsRadiusJolt";
	if(func == "physicsjitter") return "Scr_PhysicsRadiusJitter";
	if(func == "setexpfog") return "Scr_SetExponentialFog";
	if(func == "isexplosivedamagemod") return "GScr_IsExplosiveDamageMOD";
	if(func == "radiusdamage") return "GScr_RadiusDamage";
	if(func == "setplayerignoreradiusdamage") return "GScr_SetPlayerIgnoreRadiusDamage";
	if(func == "glassradiusdamage") return "GScr_GlassRadiusDamage";
	if(func == "earthquake") return "GScr_Earthquake";
	if(func == "getnumparts") return "GScr_GetNumParts";
	if(func == "getpartname") return "GScr_GetPartName";
	if(func == "weaponfiretime") return "GScr_WeaponFireTime";
	if(func == "weaponclipsize") return "GScr_WeaponClipSize";
	if(func == "weaponisauto") return "GScr_WeaponIsAuto";
	if(func == "weaponissemiauto") return "GScr_WeaponIsSemiAuto";
	if(func == "weaponisboltaction") return "GScr_WeaponIsBoltAction";
	if(func == "weaponinheritsperks") return "GScr_WeaponInheritsPerks";
	if(func == "weaponburstcount") return "GScr_WeaponBurstCount";
	if(func == "weapontype") return "GScr_WeaponType";
	if(func == "weaponclass") return "GScr_WeaponClass";
	if(func == "weaponinventorytype") return "GScr_WeaponInventoryType";
	if(func == "weaponstartammo") return "GScr_WeaponStartAmmo";
	if(func == "weaponmaxammo") return "GScr_WeaponMaxAmmo";
	if(func == "weaponaltweaponname") return "GScr_WeaponAltWeaponName";
	if(func == "isweaponcliponly") return "GScr_IsWeaponClipOnly";
	if(func == "isweapondetonationtimed") return "GScr_IsWeaponDetonationTimed";
	if(func == "weaponhasthermalscope") return "GScr_WeaponHasThermalScope";
	if(func == "getvehiclenode") return "VehPathCmd_GetNode";
	if(func == "getvehiclenodearray") return "VehPathCmd_GetNodeArray";
	if(func == "getallvehiclenodes") return "VehPathCmd_GetAllNodes";
	if(func == "getnumvehicles") return "VehicleScript_GetActiveCount";
	if(func == "precachevehicle") return "VehicleScript_Precache";
	if(func == "spawnvehicle") return "VehicleScript_Spawn";
	if(func == "vehicle_getarray") return "VehicleScript_GetArray";
	if(func == "vehicle_getspawnerarray") return "VehicleScript_GetSpawnerArray";
	if(func == "playrumbleonposition") return "Scr_PlayRumbleOnPosition";
	if(func == "playrumblelooponposition") return "Scr_PlayRumbleLoopOnPosition";
	if(func == "stopallrumbles") return "Scr_StopAllRumbles";
	if(func == "soundexists") return "ScrCmd_SoundExists";
	if(func == "openfile") return "GScr_OpenFile";
	if(func == "closefile") return "GScr_CloseFile";
	if(func == "fprintln") return "GScr_FPrintln";
	if(func == "fprintfields") return "GScr_FPrintFields";
	if(func == "freadln") return "GScr_FReadLn";
	if(func == "fgetarg") return "GScr_FGetArg";
	if(func == "setminimap") return "GScr_SetMiniMap";
	if(func == "setthermalbodymaterial") return "GScr_SetThermalBodyMaterial";
	if(func == "getarraykeys") return "GScr_GetArrayKeys";
	if(func == "getfirstarraykey") return "GScr_GetFirstArrayKey";
	if(func == "getnextarraykey") return "GScr_GetNextArrayKey";
	if(func == "sortbydistance") return "GScr_SortByDistance";
	if(func == "tablelookup") return "Scr_TableLookup";
	if(func == "tablelookupbyrow") return "Scr_TableLookupByRow";
	if(func == "tablelookupistring") return "Scr_TableLookupIString";
	if(func == "tablelookupistringbyrow") return "Scr_TableLookupIStringByRow";
	if(func == "tablelookuprownum") return "Scr_TableLookupRowNum";
	if(func == "getmissileowner") return "GScr_GetMissileOwner";
	if(func == "magicbullet") return "Scr_MagicBullet";
	if(func == "getweaponflashtagname") return "Scr_GetWeaponFlashTagname";
	if(func == "averagepoint") return "GScr_AveragePoint";
	if(func == "averagenormal") return "GScr_AverageNormal";
	if(func == "getglass") return "GScr_GetGlass";
	if(func == "getglassarray") return "GScr_GetGlassArray";
	if(func == "getglassorigin") return "GScr_GetGlassOrigin";
	if(func == "isglassdestroyed") return "GScr_IsGlassDestroyed";
	if(func == "destroyglass") return "GScr_DestroyGlass";
	if(func == "deleteglass") return "GScr_DeleteGlass";
	return sprintf("GSCFunc_%s", func);
}

static label_builtin_table(address, size, resolver) {
	auto func_table = address;
	auto i = 0;
	auto opd = 0;
	auto rfunc = 0;
	auto name = "";
	auto rname = "";
	
	for(i = 0;i < size;i++) {
		opd = Dword(func_table + (i * 0xC) + 4);
		rfunc = Dword(opd);
		name = GetString(Dword(func_table + (i * 0xC)), -1, 0);
		rname = resolver(name);
		Message("0x%X - 0x%X - %s\n", opd, rfunc, rname);
		MakeName(opd, sprintf("%s_OPD", rname));
		MakeName(rfunc, rname);
	}
}

static main() {
	label_builtin_table(0x006D1554, 104, resolve_methods);
	label_builtin_table(0x006D1A98, 26, resolve_methods);
	label_builtin_table(0x006D346C, 116, resolve_methods);
	label_builtin_table(0x006D39DC, 35, resolve_methods);
	label_builtin_table(0x006D3B80, 33, resolve_methods);
	label_builtin_table(0x006D3D0C, 152, resolve_methods);
	label_builtin_table(0x006D4C48, 73, resolve_methods);
	label_builtin_table(0x006D5638, 23, resolve_methods);
	label_builtin_table(0x006D59A0, 9, resolve_methods);
	label_builtin_table(0x006D5D9C, 61, resolve_methods);
	
	label_builtin_table(0x006D442C, 173, resolve_functions);
	label_builtin_table(0x006D4FB4, 139, resolve_functions);
	label_builtin_table(0x00715064, 15, resolve_functions);
	label_builtin_table(0x006D213C, 7, resolve_functions);
}


